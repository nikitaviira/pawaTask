version: '3.9'

services:
  auth-db:
    image: mysql:latest
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - auth_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    healthcheck:
      test: mysqladmin ping -h localhost -uroot -proot
      interval: 5s
      timeout: 5s
      retries: 10

  task-db:
    image: mysql:latest
    restart: unless-stopped
    ports:
      - "3307:3307"
    volumes:
      - task_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_TCP_PORT: 3307
    healthcheck:
      test: mysqladmin ping -h localhost -uroot -proot
      interval: 5s
      timeout: 5s
      retries: 10

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: unless-stopped
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: unless-stopped
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list
      interval: 1s
      timeout: 10s
      retries: 10

  redis:
    image: redis:latest
    restart:
      unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/var/lib/redis/data
    healthcheck:
      test: redis-cli --raw incr ping
      interval: 5s
      timeout: 5s
      retries: 10

  email-service:
    build:
      args:
        SERVICE_NAME: email-service
    command: java -jar /app/email-service.jar
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092
      EMAIL_ENABLESENDING: true
      SENDGRID_APIKEY: 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
      SENDGRID_VERIFICATIONKEY: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+sdLjrwvUWnRx8b8WBC9KhgxobHtS6fL+xSu4v3BOBMqW8UWJKYaeOFi38THYB5YVBtiTT+7rjXjUcOSVe4lpg==
    expose:
      - "8082"

  auth-service:
    build:
      args:
        SERVICE_NAME: auth-service
    command: java -jar /app/auth-service.jar
    depends_on:
      kafka:
        condition: service_healthy
      auth-db:
        condition: service_healthy
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:mysql://auth-db:3306/auth?characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    expose:
      - "8081"

  task-service:
    build:
      args:
        SERVICE_NAME: task-service
    command: java -jar /app/task-service.jar
    depends_on:
      kafka:
        condition: service_healthy
      task-db:
        condition: service_healthy
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:mysql://task-db:3307/task?characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    expose:
      - "8080"

  gateway:
    build:
      args:
        SERVICE_NAME: gateway
    command: java -jar /app/gateway.jar
    depends_on:
      redis:
        condition: service_healthy
      auth-service:
        condition: service_started
      task-service:
        condition: service_started
      email-service:
        condition: service_started
    links:
      - redis
    environment:
      URL_TASKSERVICE: http://task-service:8080
      URL_AUTHSERVICE: http://auth-service:8081
      URL_EMAILSERVICE: http://email-service:8082
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "9000:9000"

  client:
    build: ./frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/src:/frontend/src
    depends_on:
      - gateway

volumes:
  auth_data:
  task_data:
  redis_data: